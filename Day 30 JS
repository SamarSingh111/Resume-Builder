// Add click effect
    header.addEventListener('click', function() {
        this.style.animation = 'none';
        setTimeout(() => {
            this.style.animation = 'gradientShift 3s ease-in-out infinite, bounceIn 1s ease-out, glow 2s ease-in-out infinite alternate';
        }, 10);
        
        // Create burst effect
        createBurstEffect(this);
    });
    
    // Add mouse enter effect
    header.addEventListener('mouseenter', function() {
        this.style.transform = 'scale(1.05)';
        this.style.transition = 'transform 0.3s ease';
    });
    
    header.addEventListener('mouseleave', function() {
        this.style.transform = 'scale(1)';
    });
}

function createBurstEffect(element) {
    const particles = ['‚ú®', '‚≠ê', 'üí´', 'üåü', 'üíé', '‚ö°'];
    
    for (let i = 0; i < 8; i++) {
        const particle = document.createElement('div');
        particle.textContent = particles[Math.floor(Math.random() * particles.length)];
        particle.style.cssText = `
            position: absolute;
            font-size: 20px;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
            z-index: 1000;
            animation: burst 1s ease-out forwards;
            animation-delay: ${i * 0.1}s;
        `;
        
        const angle = (i / 8) * 360;
        const distance = 100;
        particle.style.setProperty('--angle', angle + 'deg');
        particle.style.setProperty('--distance', distance + 'px');
        
        element.appendChild(particle);
        
        setTimeout(() => {
            if (particle.parentNode) {
                particle.parentNode.removeChild(particle);
            }
        }, 1000);
    }
}

   
// Add CSS for dynamic effects via JavaScript
const dynamicStyles = document.createElement('style');
dynamicStyles.textContent = `
    @keyframes float {
        0%, 100% {
            transform: translateY(0px) rotate(0deg);
            opacity: 0.3;
        }
        25% {
            transform: translateY(-20px) rotate(90deg);
            opacity: 0.6;
        }
        50% {
            transform: translateY(-10px) rotate(180deg);
            opacity: 0.4;
        }
        75% {
            transform: translateY(-30px) rotate(270deg);
            opacity: 0.7;
        }
    }
    
    @keyframes burst {
        0% {
            transform: translate(-50%, -50%) scale(1) rotate(0deg);
            opacity: 1;
        }
        100% {
            transform: translate(-50%, -50%) 
                       translate(
                           calc(cos(var(--angle)) * var(--distance)),
                           calc(sin(var(--angle)) * var(--distance))
                       ) 
                       scale(0) 
                       rotate(360deg);
            opacity: 0;
        }
    }
    
    .floating-icon {
        user-select: none;
        will-change: transform, opacity;
    }
`;
document.head.appendChild(dynamicStyles);

